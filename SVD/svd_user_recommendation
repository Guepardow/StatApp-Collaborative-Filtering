svd_user_recommendation = function(userID, recap.Users, recap.Movies, data.Ratings, mat.SVD,X, list.dejaVu,  nb.recommandations, predicteur, nbMin.Ratings, AvrRtg){
  #INPUT  userID              : identifiant de l'utilisateur
  #     	 recap.Users         : base de données et des statistiques des utilisateurs
  #        	recap.Movies        : base de données et des statistiques des films
  #     	 data.Ratings        : base des notes
  #     	mat.SVD : matrice U,S et V
  #     	 matSV		: matrice entre les films
  #      	list.dejaVu         : liste des films déjà notés par individu
  #     	X                   : nombre de plus proches voisins
  #       	nb.recommandations  : nombre de films recommandés
  #         predicteur          : la fonction de prédiction
  #         nbMin.Ratings       : le nombre minimal de visionnage pour qu'un film soit recommandable
   #        AvrRtg : « Item » ou « User »
#OUTPUT                     : retourne les recommandations pour l'utilisateur userID
  
  # Plus spécifiquement, cette fonction retourne le vecteur de taille nb.recommandations, contenant les identifiants des films recommandés à partir de l'algorithme SVD pour l'individu userID
    
  # Indice de userID dans les matrices 
  userIND = which(vect.Users == userID)
  
# Liste des films qu’userID a déjà vu :
list.dejaVu= sort(data.Ratings$movieID[data.Ratings$userID ==userID])

# Ensemble des films qui sont susceptibles d'être recommandés à userID
###### Filtre des films ayant dépassés un certain seuil
  vect.Recommandable = sort(unique(recap.Movies$movieID[recap.Movies$nb.Ratings >= nbMin.Ratings]))
 ###### Les films qu’userID n’a pas encore vu
 vect.Recommandable = vect.Recommandable[!(vect.Recommandable %in% list.dejaVu)]
  
  # Génération de la matrice mat.Prediction : matrice contenant les prédictions pour tous les films susceptibles d'être recommandés et leur identifiants
n= length(vect.Recommandable)
  mat.Prediction = matrix(NA, nrow =n,ncol = 2)
  
  cat(n)
  
# Complétion de la matrice mat.Prediction
  for(movieIND in 1:n)){
    cat(sprintf("|%0.f",movieIND))
    movieID = vect.Recommandable[movieIND]
    userIND = which(data.Ratings$userID == userID)      
    US=matUS_matSV(mat.SVD,X)$US
    SV=matUS_matSV(mat.SVD,X)$SV
  stat.Users = stat_Users(data.Ratings)     
  mat.Prediction[i,1]=as.numeric(stat.Users$mean[stat.Users$userID==userID]+US[userIND,]%*%SV[,movieIND])
  mat.Prediction[i,2]= movieID
    }


  return(mat.Prediction)
}
  
 


